{
    "root": true,
    "ignorePatterns": [
        "projects/**/*"
    ],
    "overrides": [
        {
            "files": [
                "*.ts"
            ],
            "extends": [
                "eslint:recommended",
                "plugin:@typescript-eslint/recommended",
                "plugin:@angular-eslint/recommended",
                "plugin:@angular-eslint/template/process-inline-templates"
            ],
            "plugins": [
                "@angular-eslint",
                "eslint-plugin-import",
                "eslint-plugin-prefer-arrow",
                "eslint-plugin-unicorn"
            ],
            "rules": {
                "@angular-eslint/directive-selector": [
                    "error",
                    {
                        "type": "attribute",
                        "prefix": "app",
                        "style": "camelCase"
                    }
                ],
                "@angular-eslint/component-selector": [
                    "error",
                    {
                        "type": "element",
                        "prefix": "app",
                        "style": "kebab-case"
                    }
                ],
                "@angular-eslint/component-class-suffix": "error",
                "@angular-eslint/contextual-lifecycle": "error",
                "@angular-eslint/directive-class-suffix": "error",
                "@angular-eslint/no-empty-lifecycle-method": "error",
                "@angular-eslint/no-conflicting-lifecycle": "error",
                "@angular-eslint/no-host-metadata-property": "error",
                "@angular-eslint/no-input-rename": "error",
                "@angular-eslint/no-inputs-metadata-property": "error",
                "@angular-eslint/no-output-native": "error",
                "@angular-eslint/no-output-on-prefix": "error",
                "@angular-eslint/no-output-rename": "error",
                "@angular-eslint/no-outputs-metadata-property": "error",
                "@angular-eslint/use-lifecycle-interface": "error",
                "@angular-eslint/use-pipe-transform-interface": "error",
                "@typescript-eslint/explicit-member-accessibility": "error",
                "@typescript-eslint/consistent-type-definitions": "error",
                "@typescript-eslint/explicit-function-return-type": [
                    "error",
                    {
                        "allowExpressions": false,
                        "allowTypedFunctionExpressions": true,
                        "allowHigherOrderFunctions": true,
                        "allowDirectConstAssertionInArrowFunctions": true,
                        "allowConciseArrowFunctionExpressionsStartingWithVoid": false
                    }
                ],
                "@typescript-eslint/indent": [
                    "error",
                    4
                ],
                "@typescript-eslint/member-delimiter-style": [
                    "error",
                    {
                        "multiline": {
                            "delimiter": "semi",
                            "requireLast": true
                        },
                        "singleline": {
                            "delimiter": "semi",
                            "requireLast": false
                        }
                    }
                ],
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": "enum",
                        "format": [
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "enumMember",
                        "format": [
                            "UPPER_CASE"
                        ]
                    },
                    {
                        "selector": "variable",
                        "format": [
                            "camelCase"
                        ]
                    },
                    {
                        "selector": "interface",
                        "format": [
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "class",
                        "format": [
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "classMethod",
                        "format": [
                            "camelCase"
                        ]
                    },
                    {
                        "selector": "classProperty",
                        "format": [
                            "camelCase"
                        ]
                    }
                ],
                "@typescript-eslint/no-empty-function": "error",
                "@typescript-eslint/no-empty-interface": "error",
                "@typescript-eslint/no-explicit-any": "warn",
                "@typescript-eslint/no-for-in-array": "error",
                "@typescript-eslint/no-misused-new": "error",
                "@typescript-eslint/no-non-null-assertion": "error",
                "@typescript-eslint/no-shadow": [
                    "error",
                    {
                        "hoist": "all"
                    }
                ],
                "@typescript-eslint/no-this-alias": "error",
                "@typescript-eslint/no-unused-expressions": "error",
                "@typescript-eslint/no-var-requires": "error",
                "@typescript-eslint/prefer-function-type": "error",
                "@typescript-eslint/quotes": [
                    "error",
                    "single"
                ],
                "@typescript-eslint/semi": [
                    "error",
                    "always"
                ],
                "@typescript-eslint/triple-slash-reference": "error",
                "@typescript-eslint/type-annotation-spacing": "error",
                "@typescript-eslint/unified-signatures": "error",
                "arrow-body-style": "error",
                "arrow-parens": [
                    "error",
                    "as-needed"
                ],
                "brace-style": [
                    "error",
                    "1tbs"
                ],
                "class-methods-use-this": "off",
                "comma-dangle": [
                    "error",
                    "always-multiline"
                ],
                "complexity": [
                    "warn",
                    {
                        "max": 8
                    }
                ],
                "constructor-super": "error",
                "curly": "error",
                "default-case": "error",
                "dot-notation": "error",
                "eol-last": "error",
                "eqeqeq": [
                    "error",
                    "always"
                ],
                "guard-for-in": "error",
                "id-denylist": [
                    "error",
                    "any",
                    "Number",
                    "number",
                    "String",
                    "string",
                    "Boolean",
                    "boolean",
                    "Undefined",
                    "undefined"
                ],
                "id-match": "error",
                "import/no-deprecated": "warn",
                "import/no-extraneous-dependencies": [
                    "error",
                    {
                        "devDependencies": [
                            "**/*test-setup.ts"
                        ]
                    }
                ],
                "import/no-internal-modules": [
                    "error",
                    {
                        "allow": [
                            "@angular/**",
                            "core-js/*",
                            "zone.js/*",
                            "rxjs/operators",
                            "jest-preset-angular/*",
                            "angular-calendar/date-adapters/*"
                        ]
                    }
                ],
                "import/order": "error",
                "max-len": [
                    "error",
                    {
                        "ignorePattern": "^import [^,]+ from |^export | implements |// https|-->$|\\*/,$",
                        "code": 140
                    }
                ],
                "max-lines": [
                    "error",
                    500
                ],
                "max-statements": [
                    "error",
                    16
                ],
                "max-nested-callbacks": [
                    "error",
                    3
                ],
                "max-depth": [
                    "error",
                    4
                ],
                "max-lines-per-function": [
                    "warn",
                    {
                        "max": 40,
                        "skipBlankLines": true
                    }
                ],
                "new-parens": "error",
                "no-bitwise": "error",
                "no-caller": "error",
                "no-cond-assign": "error",
                "no-console": [
                    "error",
                    {
                        "allow": [
                            "warn",
                            "dir",
                            "timeLog",
                            "assert",
                            "clear",
                            "count",
                            "countReset",
                            "group",
                            "groupEnd",
                            "table",
                            "dirxml",
                            "groupCollapsed",
                            "Console",
                            "profile",
                            "profileEnd",
                            "timeStamp",
                            "context"
                        ]
                    }
                ],
                "no-debugger": "error",
                "no-duplicate-case": "error",
                "no-duplicate-imports": "error",
                "no-empty": "error",
                "no-empty-function": [
                    "error",
                    {
                        "allow": [
                            "constructors"
                        ]
                    }
                ],
                "no-eval": "error",
                "no-fallthrough": "error",
                "no-invalid-this": "error",
                "no-irregular-whitespace": "error",
                "no-magic-numbers": [
                    "error",
                    {
                        "ignoreDefaultValues": true,
                        "ignore": [
                            -1,
                            0,
                            1,
                            2
                        ]
                    }
                ],
                "no-multiple-empty-lines": [
                    "error",
                    {
                        "max": 2
                    }
                ],
                "no-new-wrappers": "error",
                "no-param-reassign": "error",
                "no-redeclare": "error",
                "no-restricted-imports": [
                    "error",
                    {
                        "paths": [
                            "luxon",
                            "rxjs/Rx"
                        ],
                        "patterns": [
                            "luxon/*"
                        ]
                    }
                ],
                "no-return-await": "error",
                "no-sequences": "error",
                "no-sparse-arrays": "error",
                "no-template-curly-in-string": "error",
                "no-throw-literal": "error",
                "no-trailing-spaces": "error",
                "no-undef-init": "error",
                "no-underscore-dangle": "error",
                "no-unsafe-finally": "error",
                "no-unused-expressions": "error",
                "no-unused-labels": "error",
                "no-var": "error",
                "no-void": "error",
                "object-shorthand": "error",
                "one-var": [
                    "error",
                    "never"
                ],
                "prefer-arrow/prefer-arrow-functions": "error",
                "prefer-const": "error",
                "prefer-template": "error",
                "quote-props": [
                    "error",
                    "as-needed"
                ],
                "quotes": [
                    "error",
                    "single",
                    {
                        "allowTemplateLiterals": true
                    }
                ],
                "radix": "error",
                "semi": "error",
                "spaced-comment": [
                    "error",
                    "always",
                    {
                        "markers": [
                            "/"
                        ]
                    }
                ],
                "unicorn/prefer-switch": [
                    "error",
                    {
                        "minimumCases": 2
                    }
                ],
                "unicorn/prefer-ternary": "error",
                "use-isnan": "error",
                "yoda": "error",
                "@typescript-eslint/no-inferrable-types": "off",
                "@typescript-eslint/member-ordering": [
                    "error",
                    {
                        "default": [
                            "signature",
                            "public-static-field",
                            "protected-static-field",
                            "private-static-field",
                            [
                                "public-decorated-field",
                                "public-decorated-set"
                            ],
                            [
                                "protected-decorated-field",
                                "protected-decorated-set"
                            ],
                            [
                                "private-decorated-field",
                                "private-decorated-set"
                            ],
                            "public-instance-field",
                            "protected-instance-field",
                            "private-instance-field",
                            "public-abstract-field",
                            "protected-abstract-field",
                            "public-field",
                            "protected-field",
                            "private-field",
                            "static-field",
                            "instance-field",
                            "abstract-field",
                            [
                                "decorated-field",
                                "field"
                            ],
                            "static-initialization",
                            "public-constructor",
                            "protected-constructor",
                            "private-constructor",
                            "public-decorated-get",
                            "protected-decorated-get",
                            "private-decorated-get",
                            "public-static-get",
                            "protected-static-get",
                            "private-static-get",
                            "public-instance-get",
                            "protected-instance-get",
                            "private-instance-get",
                            "public-abstract-get",
                            "protected-abstract-get",
                            "public-get",
                            "protected-get",
                            "private-get",
                            "static-get",
                            "instance-get",
                            "abstract-get",
                            "decorated-get",
                            "get",
                            "public-static-set",
                            "protected-static-set",
                            "private-static-set",
                            "public-instance-set",
                            "protected-instance-set",
                            "private-instance-set",
                            "public-abstract-set",
                            "protected-abstract-set",
                            "public-set",
                            "protected-set",
                            "private-set",
                            "static-set",
                            "instance-set",
                            "abstract-set",
                            "decorated-set",
                            "set",
                            "public-static-method",
                            "protected-static-method",
                            "private-static-method",
                            [
                                "public-decorated-method",
                                "public-instance-method"
                            ],
                            [
                                "protected-decorated-method",
                                "protected-instance-method"
                            ],
                            [
                                "private-decorated-method",
                                "private-instance-method"
                            ],
                            "public-abstract-method",
                            "protected-abstract-method"
                        ]
                    }
                ],
                "no-restricted-syntax": [
                    "error",
                    {
                        "selector": "CallExpression[callee.object.name=\"console\"][callee.property.name=/^(debug|info|time|timeEnd|trace)$/]",
                        "message": "Unexpected property on console object was called"
                    }
                ],
                "@typescript-eslint/typedef": [
                    "error",
                    {
                        "memberVariableDeclaration": true,
                        "parameter": true,
                        "variableDeclaration": true
                    }
                ]
            }
        },
        {
            "files": [
                "*.html"
            ],
            "extends": [
                "plugin:@angular-eslint/template/recommended"
            ],
            "rules": {
                "max-len": "off"
            }
        },
        {
            "files": [
                "main.ts"
            ],
            "rules": {
                "no-console": "off"
            }
        },
        {
            "files": [
                "*.config.ts",
                "*.spec.ts"
            ],
            "rules": {
                "no-magic-numbers": "off"
            }
        },
        {
            "files": [
                "*.spec.ts"
            ],
            "rules": {
                "max-lines-per-function": "off",
                "max-nested-callbacks": "off",
                "max-statements": "off",
                "max-lines": "off"
            }
        },
        {
            "files": [
                "*.token.ts"
            ],
            "rules": {
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": "variable",
                        "format": [
                            "UPPER_CASE"
                        ]
                    }
                ]
            }
        },
        {
            "files": [
                "environment.interface.ts"
            ],
            "rules": {
                "import/no-extraneous-dependencies": "off"
            }
        }
    ]
}
